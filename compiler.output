Terminals unused in grammar

   FOR


Grammar

    0 $accept: Input $end

    1 Input: %empty
    2      | Input Line

    3 Line: SEMICOLON
    4     | BlocFonction
    5     | AppelFonction
    6     | Declaration

    7 $@1: %empty

    8 Line: CONST $@1 Declaration
    9     | Affectation
   10     | BlocIf
   11     | BlocWhile

   12 Type: INT
   13     | FLOAT
   14     | STRING

   15 Declaration: Type Declaration_liste_vars SEMICOLON

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR Assignation

   18 Affectation: VAR Assignation SEMICOLON

   19 Assignation: %empty
   20            | ASSIGN Expr
   21            | ASSIGN BlocIfTernaire

   22 $@2: %empty

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON

   25 Liste_params: %empty
   26             | VAR
   27             | Liste_params SEPARATEUR VAR

   28 Operation: Expr
   29          | AppelFonction

   30 $@3: %empty

   31 $@4: %empty

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE $@4 BlocElse

   33 BlocIfTernaire: Expr QUESTION_MARK Operation COLON Operation

   34 BlocElse: %empty

   35 $@5: %empty

   36 $@6: %empty

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE $@6 BlocElse

   38 $@7: %empty

   39 BlocElse: ELSE ACCOLADE_OUVRANTE $@7 Input ACCOLADE_FERMANTE

   40 $@8: %empty

   41 BlocWhile: WHILE Expr ACCOLADE_OUVRANTE $@8 Input ACCOLADE_FERMANTE

   42 Expr: NOMBRE
   43     | FLOTTANT
   44     | TEXT
   45     | VAR
   46     | SUB Expr
   47     | Expr PLUS Expr
   48     | Expr SUB Expr
   49     | Expr MULT Expr
   50     | Expr DIV Expr
   51     | Expr POW Expr
   52     | Expr GREATER_EQUALS Expr
   53     | Expr LESS_EQUALS Expr
   54     | Expr LESS Expr
   55     | Expr GREATER Expr
   56     | Expr EQUALS Expr
   57     | PARENTHESE_OUVRANTE Expr PARENTHESE_FERMANTE


Terminals, with rules where they appear

$end (0) 0
error (256)
NOMBRE (258) 42
FLOTTANT (259) 43
TEXT (260) 44
PLUS (261) 47
SUB (262) 46 48
MULT (263) 49
DIV (264) 50
POW (265) 51
PARENTHESE_OUVRANTE (266) 23 24 57
PARENTHESE_FERMANTE (267) 23 24 57
ACCOLADE_OUVRANTE (268) 23 32 37 39 41
ACCOLADE_FERMANTE (269) 23 32 37 39 41
EQUALS (270) 56
LESS_EQUALS (271) 53
GREATER_EQUALS (272) 52
GREATER (273) 55
LESS (274) 54
SEMICOLON (275) 3 15 18 24
INT (276) 12
FLOAT (277) 13
STRING (278) 14
CONST (279) 8
VAR (280) 16 17 18 23 24 26 27 45
SEPARATEUR (281) 16 27
ASSIGN (282) 20 21
WHILE (283) 41
FOR (284)
IF (285) 32
ELSEIF (286) 37
ELSE (287) 39
QUESTION_MARK (288) 33
COLON (289) 33


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
Input (36)
    on left: 1 2, on right: 0 2 23 32 37 39 41
Line (37)
    on left: 3 4 5 6 8 9 10 11, on right: 2
$@1 (38)
    on left: 7, on right: 8
Type (39)
    on left: 12 13 14, on right: 15 23
Declaration (40)
    on left: 15, on right: 6 8
Declaration_liste_vars (41)
    on left: 16 17, on right: 15 16
Affectation (42)
    on left: 18, on right: 9
Assignation (43)
    on left: 19 20 21, on right: 16 17 18
BlocFonction (44)
    on left: 23, on right: 4
$@2 (45)
    on left: 22, on right: 23
AppelFonction (46)
    on left: 24, on right: 5 29
Liste_params (47)
    on left: 25 26 27, on right: 23 24 27
Operation (48)
    on left: 28 29, on right: 33
BlocIf (49)
    on left: 32, on right: 10
$@3 (50)
    on left: 30, on right: 32
$@4 (51)
    on left: 31, on right: 32
BlocIfTernaire (52)
    on left: 33, on right: 21
BlocElse (53)
    on left: 34 37 39, on right: 32 37
$@5 (54)
    on left: 35, on right: 37
$@6 (55)
    on left: 36, on right: 37
$@7 (56)
    on left: 38, on right: 39
BlocWhile (57)
    on left: 41, on right: 11
$@8 (58)
    on left: 40, on right: 41
Expr (59)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57, on right:
    20 28 32 33 37 41 46 47 48 49 50 51 52 53 54 55 56 57


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . Line

    $end       shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    STRING     shift, and go to state 6
    CONST      shift, and go to state 7
    VAR        shift, and go to state 8
    WHILE      shift, and go to state 9
    IF         shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 2

    0 $accept: Input $end .

    $default  accept


State 3

    3 Line: SEMICOLON .

    $default  reduce using rule 3 (Line)


State 4

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 5

   13 Type: FLOAT .

    $default  reduce using rule 13 (Type)


State 6

   14 Type: STRING .

    $default  reduce using rule 14 (Type)


State 7

    8 Line: CONST . $@1 Declaration

    $default  reduce using rule 7 ($@1)

    $@1  go to state 19


State 8

   18 Affectation: VAR . Assignation SEMICOLON
   24 AppelFonction: VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON

    PARENTHESE_OUVRANTE  shift, and go to state 20
    ASSIGN               shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 22


State 9

   41 BlocWhile: WHILE . Expr ACCOLADE_OUVRANTE $@8 Input ACCOLADE_FERMANTE

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 29


State 10

   32 BlocIf: IF . Expr ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE $@4 BlocElse

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 30


State 11

    2 Input: Input Line .

    $default  reduce using rule 2 (Input)


State 12

   15 Declaration: Type . Declaration_liste_vars SEMICOLON
   23 BlocFonction: Type . VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    VAR  shift, and go to state 31

    Declaration_liste_vars  go to state 32


State 13

    6 Line: Declaration .

    $default  reduce using rule 6 (Line)


State 14

    9 Line: Affectation .

    $default  reduce using rule 9 (Line)


State 15

    4 Line: BlocFonction .

    $default  reduce using rule 4 (Line)


State 16

    5 Line: AppelFonction .

    $default  reduce using rule 5 (Line)


State 17

   10 Line: BlocIf .

    $default  reduce using rule 10 (Line)


State 18

   11 Line: BlocWhile .

    $default  reduce using rule 11 (Line)


State 19

    8 Line: CONST $@1 . Declaration

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6

    Type         go to state 33
    Declaration  go to state 34


State 20

   24 AppelFonction: VAR PARENTHESE_OUVRANTE . Liste_params PARENTHESE_FERMANTE SEMICOLON

    VAR  shift, and go to state 35

    $default  reduce using rule 25 (Liste_params)

    Liste_params  go to state 36


State 21

   20 Assignation: ASSIGN . Expr
   21            | ASSIGN . BlocIfTernaire

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    BlocIfTernaire  go to state 37
    Expr            go to state 38


State 22

   18 Affectation: VAR Assignation . SEMICOLON

    SEMICOLON  shift, and go to state 39


State 23

   42 Expr: NOMBRE .

    $default  reduce using rule 42 (Expr)


State 24

   43 Expr: FLOTTANT .

    $default  reduce using rule 43 (Expr)


State 25

   44 Expr: TEXT .

    $default  reduce using rule 44 (Expr)


State 26

   46 Expr: SUB . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 40


State 27

   57 Expr: PARENTHESE_OUVRANTE . Expr PARENTHESE_FERMANTE

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 41


State 28

   45 Expr: VAR .

    $default  reduce using rule 45 (Expr)


State 29

   41 BlocWhile: WHILE Expr . ACCOLADE_OUVRANTE $@8 Input ACCOLADE_FERMANTE
   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    PLUS               shift, and go to state 42
    SUB                shift, and go to state 43
    MULT               shift, and go to state 44
    DIV                shift, and go to state 45
    POW                shift, and go to state 46
    ACCOLADE_OUVRANTE  shift, and go to state 47
    EQUALS             shift, and go to state 48
    LESS_EQUALS        shift, and go to state 49
    GREATER_EQUALS     shift, and go to state 50
    GREATER            shift, and go to state 51
    LESS               shift, and go to state 52


State 30

   32 BlocIf: IF Expr . ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE $@4 BlocElse
   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    PLUS               shift, and go to state 42
    SUB                shift, and go to state 43
    MULT               shift, and go to state 44
    DIV                shift, and go to state 45
    POW                shift, and go to state 46
    ACCOLADE_OUVRANTE  shift, and go to state 53
    EQUALS             shift, and go to state 48
    LESS_EQUALS        shift, and go to state 49
    GREATER_EQUALS     shift, and go to state 50
    GREATER            shift, and go to state 51
    LESS               shift, and go to state 52


State 31

   16 Declaration_liste_vars: VAR . Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR . Assignation
   23 BlocFonction: Type VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 54
    ASSIGN               shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 55


State 32

   15 Declaration: Type Declaration_liste_vars . SEMICOLON

    SEMICOLON  shift, and go to state 56


State 33

   15 Declaration: Type . Declaration_liste_vars SEMICOLON

    VAR  shift, and go to state 57

    Declaration_liste_vars  go to state 32


State 34

    8 Line: CONST $@1 Declaration .

    $default  reduce using rule 8 (Line)


State 35

   26 Liste_params: VAR .

    $default  reduce using rule 26 (Liste_params)


State 36

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params . PARENTHESE_FERMANTE SEMICOLON
   27 Liste_params: Liste_params . SEPARATEUR VAR

    PARENTHESE_FERMANTE  shift, and go to state 58
    SEPARATEUR           shift, and go to state 59


State 37

   21 Assignation: ASSIGN BlocIfTernaire .

    $default  reduce using rule 21 (Assignation)


State 38

   20 Assignation: ASSIGN Expr .
   33 BlocIfTernaire: Expr . QUESTION_MARK Operation COLON Operation
   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    PLUS            shift, and go to state 42
    SUB             shift, and go to state 43
    MULT            shift, and go to state 44
    DIV             shift, and go to state 45
    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52
    QUESTION_MARK   shift, and go to state 60

    $default  reduce using rule 20 (Assignation)


State 39

   18 Affectation: VAR Assignation SEMICOLON .

    $default  reduce using rule 18 (Affectation)


State 40

   46 Expr: SUB Expr .
   47     | Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 46 (Expr)


State 41

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr
   57     | PARENTHESE_OUVRANTE Expr . PARENTHESE_FERMANTE

    PLUS                 shift, and go to state 42
    SUB                  shift, and go to state 43
    MULT                 shift, and go to state 44
    DIV                  shift, and go to state 45
    POW                  shift, and go to state 46
    PARENTHESE_FERMANTE  shift, and go to state 61
    EQUALS               shift, and go to state 48
    LESS_EQUALS          shift, and go to state 49
    GREATER_EQUALS       shift, and go to state 50
    GREATER              shift, and go to state 51
    LESS                 shift, and go to state 52


State 42

   47 Expr: Expr PLUS . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 62


State 43

   48 Expr: Expr SUB . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 63


State 44

   49 Expr: Expr MULT . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 64


State 45

   50 Expr: Expr DIV . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 65


State 46

   51 Expr: Expr POW . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 66


State 47

   41 BlocWhile: WHILE Expr ACCOLADE_OUVRANTE . $@8 Input ACCOLADE_FERMANTE

    $default  reduce using rule 40 ($@8)

    $@8  go to state 67


State 48

   56 Expr: Expr EQUALS . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 68


State 49

   53 Expr: Expr LESS_EQUALS . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 69


State 50

   52 Expr: Expr GREATER_EQUALS . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 70


State 51

   55 Expr: Expr GREATER . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 71


State 52

   54 Expr: Expr LESS . Expr

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 72


State 53

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE . $@3 Input ACCOLADE_FERMANTE $@4 BlocElse

    $default  reduce using rule 30 ($@3)

    $@3  go to state 73


State 54

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE . Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    VAR  shift, and go to state 35

    $default  reduce using rule 25 (Liste_params)

    Liste_params  go to state 74


State 55

   16 Declaration_liste_vars: VAR Assignation . SEPARATEUR Declaration_liste_vars
   17                       | VAR Assignation .

    SEPARATEUR  shift, and go to state 75

    $default  reduce using rule 17 (Declaration_liste_vars)


State 56

   15 Declaration: Type Declaration_liste_vars SEMICOLON .

    $default  reduce using rule 15 (Declaration)


State 57

   16 Declaration_liste_vars: VAR . Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR . Assignation

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 55


State 58

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 59

   27 Liste_params: Liste_params SEPARATEUR . VAR

    VAR  shift, and go to state 77


State 60

   33 BlocIfTernaire: Expr QUESTION_MARK . Operation COLON Operation

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 78

    AppelFonction  go to state 79
    Operation      go to state 80
    Expr           go to state 81


State 61

   57 Expr: PARENTHESE_OUVRANTE Expr PARENTHESE_FERMANTE .

    $default  reduce using rule 57 (Expr)


State 62

   47 Expr: Expr . PLUS Expr
   47     | Expr PLUS Expr .
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    MULT            shift, and go to state 44
    DIV             shift, and go to state 45
    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 47 (Expr)


State 63

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   48     | Expr SUB Expr .
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    MULT            shift, and go to state 44
    DIV             shift, and go to state 45
    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 48 (Expr)


State 64

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   49     | Expr MULT Expr .
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 49 (Expr)


State 65

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   50     | Expr DIV Expr .
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 50 (Expr)


State 66

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   51     | Expr POW Expr .
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 51 (Expr)


State 67

   41 BlocWhile: WHILE Expr ACCOLADE_OUVRANTE $@8 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 82


State 68

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr
   56     | Expr EQUALS Expr .

    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 56 (Expr)


State 69

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   53     | Expr LESS_EQUALS Expr .
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 53 (Expr)


State 70

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   52     | Expr GREATER_EQUALS Expr .
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 52 (Expr)


State 71

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   55     | Expr GREATER Expr .
   56     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 55 (Expr)


State 72

   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   54     | Expr LESS Expr .
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 54 (Expr)


State 73

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 . Input ACCOLADE_FERMANTE $@4 BlocElse

    $default  reduce using rule 1 (Input)

    Input  go to state 83


State 74

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE
   27 Liste_params: Liste_params . SEPARATEUR VAR

    PARENTHESE_FERMANTE  shift, and go to state 84
    SEPARATEUR           shift, and go to state 59


State 75

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR . Declaration_liste_vars

    VAR  shift, and go to state 57

    Declaration_liste_vars  go to state 85


State 76

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON .

    $default  reduce using rule 24 (AppelFonction)


State 77

   27 Liste_params: Liste_params SEPARATEUR VAR .

    $default  reduce using rule 27 (Liste_params)


State 78

   24 AppelFonction: VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON
   45 Expr: VAR .

    PARENTHESE_OUVRANTE  shift, and go to state 20

    $default  reduce using rule 45 (Expr)


State 79

   29 Operation: AppelFonction .

    $default  reduce using rule 29 (Operation)


State 80

   33 BlocIfTernaire: Expr QUESTION_MARK Operation . COLON Operation

    COLON  shift, and go to state 86


State 81

   28 Operation: Expr .
   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    PLUS            shift, and go to state 42
    SUB             shift, and go to state 43
    MULT            shift, and go to state 44
    DIV             shift, and go to state 45
    POW             shift, and go to state 46
    EQUALS          shift, and go to state 48
    LESS_EQUALS     shift, and go to state 49
    GREATER_EQUALS  shift, and go to state 50
    GREATER         shift, and go to state 51
    LESS            shift, and go to state 52

    $default  reduce using rule 28 (Operation)


State 82

    2 Input: Input . Line
   41 BlocWhile: WHILE Expr ACCOLADE_OUVRANTE $@8 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 87
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 83

    2 Input: Input . Line
   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 Input . ACCOLADE_FERMANTE $@4 BlocElse

    ACCOLADE_FERMANTE  shift, and go to state 88
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 84

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 89


State 85

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR Declaration_liste_vars .

    $default  reduce using rule 16 (Declaration_liste_vars)


State 86

   33 BlocIfTernaire: Expr QUESTION_MARK Operation COLON . Operation

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 78

    AppelFonction  go to state 79
    Operation      go to state 90
    Expr           go to state 81


State 87

   41 BlocWhile: WHILE Expr ACCOLADE_OUVRANTE $@8 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 41 (BlocWhile)


State 88

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE . $@4 BlocElse

    $default  reduce using rule 31 ($@4)

    $@4  go to state 91


State 89

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . $@2 Input ACCOLADE_FERMANTE

    $default  reduce using rule 22 ($@2)

    $@2  go to state 92


State 90

   33 BlocIfTernaire: Expr QUESTION_MARK Operation COLON Operation .

    $default  reduce using rule 33 (BlocIfTernaire)


State 91

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE $@4 . BlocElse

    ELSEIF  shift, and go to state 93
    ELSE    shift, and go to state 94

    $default  reduce using rule 34 (BlocElse)

    BlocElse  go to state 95


State 92

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 96


State 93

   37 BlocElse: ELSEIF . Expr ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE $@6 BlocElse

    NOMBRE               shift, and go to state 23
    FLOTTANT             shift, and go to state 24
    TEXT                 shift, and go to state 25
    SUB                  shift, and go to state 26
    PARENTHESE_OUVRANTE  shift, and go to state 27
    VAR                  shift, and go to state 28

    Expr  go to state 97


State 94

   39 BlocElse: ELSE . ACCOLADE_OUVRANTE $@7 Input ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 98


State 95

   32 BlocIf: IF Expr ACCOLADE_OUVRANTE $@3 Input ACCOLADE_FERMANTE $@4 BlocElse .

    $default  reduce using rule 32 (BlocIf)


State 96

    2 Input: Input . Line
   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 99
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 97

   37 BlocElse: ELSEIF Expr . ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE $@6 BlocElse
   47 Expr: Expr . PLUS Expr
   48     | Expr . SUB Expr
   49     | Expr . MULT Expr
   50     | Expr . DIV Expr
   51     | Expr . POW Expr
   52     | Expr . GREATER_EQUALS Expr
   53     | Expr . LESS_EQUALS Expr
   54     | Expr . LESS Expr
   55     | Expr . GREATER Expr
   56     | Expr . EQUALS Expr

    PLUS               shift, and go to state 42
    SUB                shift, and go to state 43
    MULT               shift, and go to state 44
    DIV                shift, and go to state 45
    POW                shift, and go to state 46
    ACCOLADE_OUVRANTE  shift, and go to state 100
    EQUALS             shift, and go to state 48
    LESS_EQUALS        shift, and go to state 49
    GREATER_EQUALS     shift, and go to state 50
    GREATER            shift, and go to state 51
    LESS               shift, and go to state 52


State 98

   39 BlocElse: ELSE ACCOLADE_OUVRANTE . $@7 Input ACCOLADE_FERMANTE

    $default  reduce using rule 38 ($@7)

    $@7  go to state 101


State 99

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 23 (BlocFonction)


State 100

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE . $@5 Input ACCOLADE_FERMANTE $@6 BlocElse

    $default  reduce using rule 35 ($@5)

    $@5  go to state 102


State 101

   39 BlocElse: ELSE ACCOLADE_OUVRANTE $@7 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 103


State 102

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 . Input ACCOLADE_FERMANTE $@6 BlocElse

    $default  reduce using rule 1 (Input)

    Input  go to state 104


State 103

    2 Input: Input . Line
   39 BlocElse: ELSE ACCOLADE_OUVRANTE $@7 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 105
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 104

    2 Input: Input . Line
   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 Input . ACCOLADE_FERMANTE $@6 BlocElse

    ACCOLADE_FERMANTE  shift, and go to state 106
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 105

   39 BlocElse: ELSE ACCOLADE_OUVRANTE $@7 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 39 (BlocElse)


State 106

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE . $@6 BlocElse

    $default  reduce using rule 36 ($@6)

    $@6  go to state 107


State 107

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE $@6 . BlocElse

    ELSEIF  shift, and go to state 93
    ELSE    shift, and go to state 94

    $default  reduce using rule 34 (BlocElse)

    BlocElse  go to state 108


State 108

   37 BlocElse: ELSEIF Expr ACCOLADE_OUVRANTE $@5 Input ACCOLADE_FERMANTE $@6 BlocElse .

    $default  reduce using rule 37 (BlocElse)

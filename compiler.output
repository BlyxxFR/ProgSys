Terminals unused in grammar

   FOR


Grammar

    0 $accept: Input $end

    1 Input: %empty
    2      | Input Line

    3 Line: SEMICOLON
    4     | BlocFonction
    5     | AppelFonction
    6     | Declaration

    7 $@1: %empty

    8 Line: CONST $@1 Declaration
    9     | Affectation
   10     | BlocIf
   11     | BlocWhile

   12 Type: INT
   13     | FLOAT
   14     | STRING

   15 Declaration: Type Declaration_liste_vars SEMICOLON

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR Assignation

   18 Affectation: VAR Assignation SEMICOLON

   19 Assignation: %empty
   20            | ASSIGN Expr
   21            | ASSIGN BlocIfTernaire

   22 $@2: %empty

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON

   25 Liste_params: %empty
   26             | Params
   27             | Liste_params SEPARATEUR Params

   28 Params: VAR
   29       | TEXT
   30       | NOMBRE

   31 Operation: Expr
   32          | AppelFonction

   33 $@3: %empty

   34 $@4: %empty

   35 $@5: %empty

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

   37 BlocIfTernaire: Expr QUESTION_MARK Operation COLON Operation

   38 BlocElse: %empty

   39 $@6: %empty

   40 BlocElse: ELSE ACCOLADE_OUVRANTE $@6 Input ACCOLADE_FERMANTE

   41 $@7: %empty

   42 $@8: %empty

   43 $@9: %empty

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

   45 Expr: NOMBRE
   46     | FLOTTANT
   47     | TEXT
   48     | VAR
   49     | SUB Expr
   50     | Expr PLUS Expr
   51     | Expr SUB Expr
   52     | Expr MULT Expr
   53     | Expr DIV Expr
   54     | Expr POW Expr
   55     | Expr GREATER_EQUALS Expr
   56     | Expr LESS_EQUALS Expr
   57     | Expr LESS Expr
   58     | Expr GREATER Expr
   59     | Expr EQUALS Expr
   60     | PARENTHESE_OUVRANTE Expr PARENTHESE_FERMANTE


Terminals, with rules where they appear

$end (0) 0
error (256)
NOMBRE (258) 30 45
FLOTTANT (259) 46
TEXT (260) 29 47
PLUS (261) 50
SUB (262) 49 51
MULT (263) 52
DIV (264) 53
POW (265) 54
PARENTHESE_OUVRANTE (266) 23 24 36 44 60
PARENTHESE_FERMANTE (267) 23 24 36 44 60
ACCOLADE_OUVRANTE (268) 23 36 40 44
ACCOLADE_FERMANTE (269) 23 36 40 44
EQUALS (270) 59
LESS_EQUALS (271) 56
GREATER_EQUALS (272) 55
GREATER (273) 58
LESS (274) 57
SEMICOLON (275) 3 15 18 24
INT (276) 12
FLOAT (277) 13
STRING (278) 14
CONST (279) 8
VAR (280) 16 17 18 23 24 28 48
SEPARATEUR (281) 16 27
ASSIGN (282) 20 21
WHILE (283) 44
FOR (284)
IF (285) 36
ELSE (286) 40
QUESTION_MARK (287) 37
COLON (288) 37


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Input (35)
    on left: 1 2, on right: 0 2 23 36 40 44
Line (36)
    on left: 3 4 5 6 8 9 10 11, on right: 2
$@1 (37)
    on left: 7, on right: 8
Type (38)
    on left: 12 13 14, on right: 15 23
Declaration (39)
    on left: 15, on right: 6 8
Declaration_liste_vars (40)
    on left: 16 17, on right: 15 16
Affectation (41)
    on left: 18, on right: 9
Assignation (42)
    on left: 19 20 21, on right: 16 17 18
BlocFonction (43)
    on left: 23, on right: 4
$@2 (44)
    on left: 22, on right: 23
AppelFonction (45)
    on left: 24, on right: 5 32
Liste_params (46)
    on left: 25 26 27, on right: 23 24 27
Params (47)
    on left: 28 29 30, on right: 26 27
Operation (48)
    on left: 31 32, on right: 37
BlocIf (49)
    on left: 36, on right: 10
$@3 (50)
    on left: 33, on right: 36
$@4 (51)
    on left: 34, on right: 36
$@5 (52)
    on left: 35, on right: 36
BlocIfTernaire (53)
    on left: 37, on right: 21
BlocElse (54)
    on left: 38 40, on right: 36
$@6 (55)
    on left: 39, on right: 40
BlocWhile (56)
    on left: 44, on right: 11
$@7 (57)
    on left: 41, on right: 44
$@8 (58)
    on left: 42, on right: 44
$@9 (59)
    on left: 43, on right: 44
Expr (60)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60, on right:
    20 31 36 37 44 49 50 51 52 53 54 55 56 57 58 59 60


State 0

    0 $accept: . Input $end

    $default  reduce using rule 1 (Input)

    Input  go to state 1


State 1

    0 $accept: Input . $end
    2 Input: Input . Line

    $end       shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    INT        shift, and go to state 4
    FLOAT      shift, and go to state 5
    STRING     shift, and go to state 6
    CONST      shift, and go to state 7
    VAR        shift, and go to state 8
    WHILE      shift, and go to state 9
    IF         shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 2

    0 $accept: Input $end .

    $default  accept


State 3

    3 Line: SEMICOLON .

    $default  reduce using rule 3 (Line)


State 4

   12 Type: INT .

    $default  reduce using rule 12 (Type)


State 5

   13 Type: FLOAT .

    $default  reduce using rule 13 (Type)


State 6

   14 Type: STRING .

    $default  reduce using rule 14 (Type)


State 7

    8 Line: CONST . $@1 Declaration

    $default  reduce using rule 7 ($@1)

    $@1  go to state 19


State 8

   18 Affectation: VAR . Assignation SEMICOLON
   24 AppelFonction: VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON

    PARENTHESE_OUVRANTE  shift, and go to state 20
    ASSIGN               shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 22


State 9

   44 BlocWhile: WHILE . PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 23


State 10

   36 BlocIf: IF . PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

    PARENTHESE_OUVRANTE  shift, and go to state 24


State 11

    2 Input: Input Line .

    $default  reduce using rule 2 (Input)


State 12

   15 Declaration: Type . Declaration_liste_vars SEMICOLON
   23 BlocFonction: Type . VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    VAR  shift, and go to state 25

    Declaration_liste_vars  go to state 26


State 13

    6 Line: Declaration .

    $default  reduce using rule 6 (Line)


State 14

    9 Line: Affectation .

    $default  reduce using rule 9 (Line)


State 15

    4 Line: BlocFonction .

    $default  reduce using rule 4 (Line)


State 16

    5 Line: AppelFonction .

    $default  reduce using rule 5 (Line)


State 17

   10 Line: BlocIf .

    $default  reduce using rule 10 (Line)


State 18

   11 Line: BlocWhile .

    $default  reduce using rule 11 (Line)


State 19

    8 Line: CONST $@1 . Declaration

    INT     shift, and go to state 4
    FLOAT   shift, and go to state 5
    STRING  shift, and go to state 6

    Type         go to state 27
    Declaration  go to state 28


State 20

   24 AppelFonction: VAR PARENTHESE_OUVRANTE . Liste_params PARENTHESE_FERMANTE SEMICOLON

    NOMBRE  shift, and go to state 29
    TEXT    shift, and go to state 30
    VAR     shift, and go to state 31

    $default  reduce using rule 25 (Liste_params)

    Liste_params  go to state 32
    Params        go to state 33


State 21

   20 Assignation: ASSIGN . Expr
   21            | ASSIGN . BlocIfTernaire

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    BlocIfTernaire  go to state 40
    Expr            go to state 41


State 22

   18 Affectation: VAR Assignation . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 23

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE . $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

    $default  reduce using rule 41 ($@7)

    $@7  go to state 43


State 24

   36 BlocIf: IF PARENTHESE_OUVRANTE . Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 44


State 25

   16 Declaration_liste_vars: VAR . Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR . Assignation
   23 BlocFonction: Type VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    PARENTHESE_OUVRANTE  shift, and go to state 45
    ASSIGN               shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 46


State 26

   15 Declaration: Type Declaration_liste_vars . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 27

   15 Declaration: Type . Declaration_liste_vars SEMICOLON

    VAR  shift, and go to state 48

    Declaration_liste_vars  go to state 26


State 28

    8 Line: CONST $@1 Declaration .

    $default  reduce using rule 8 (Line)


State 29

   30 Params: NOMBRE .

    $default  reduce using rule 30 (Params)


State 30

   29 Params: TEXT .

    $default  reduce using rule 29 (Params)


State 31

   28 Params: VAR .

    $default  reduce using rule 28 (Params)


State 32

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params . PARENTHESE_FERMANTE SEMICOLON
   27 Liste_params: Liste_params . SEPARATEUR Params

    PARENTHESE_FERMANTE  shift, and go to state 49
    SEPARATEUR           shift, and go to state 50


State 33

   26 Liste_params: Params .

    $default  reduce using rule 26 (Liste_params)


State 34

   45 Expr: NOMBRE .

    $default  reduce using rule 45 (Expr)


State 35

   46 Expr: FLOTTANT .

    $default  reduce using rule 46 (Expr)


State 36

   47 Expr: TEXT .

    $default  reduce using rule 47 (Expr)


State 37

   49 Expr: SUB . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 51


State 38

   60 Expr: PARENTHESE_OUVRANTE . Expr PARENTHESE_FERMANTE

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 52


State 39

   48 Expr: VAR .

    $default  reduce using rule 48 (Expr)


State 40

   21 Assignation: ASSIGN BlocIfTernaire .

    $default  reduce using rule 21 (Assignation)


State 41

   20 Assignation: ASSIGN Expr .
   37 BlocIfTernaire: Expr . QUESTION_MARK Operation COLON Operation
   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    PLUS            shift, and go to state 53
    SUB             shift, and go to state 54
    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62
    QUESTION_MARK   shift, and go to state 63

    $default  reduce using rule 20 (Assignation)


State 42

   18 Affectation: VAR Assignation SEMICOLON .

    $default  reduce using rule 18 (Affectation)


State 43

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 . Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 64


State 44

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr . $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse
   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    PLUS            shift, and go to state 53
    SUB             shift, and go to state 54
    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 33 ($@3)

    $@3  go to state 65


State 45

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE . Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    NOMBRE  shift, and go to state 29
    TEXT    shift, and go to state 30
    VAR     shift, and go to state 31

    $default  reduce using rule 25 (Liste_params)

    Liste_params  go to state 66
    Params        go to state 33


State 46

   16 Declaration_liste_vars: VAR Assignation . SEPARATEUR Declaration_liste_vars
   17                       | VAR Assignation .

    SEPARATEUR  shift, and go to state 67

    $default  reduce using rule 17 (Declaration_liste_vars)


State 47

   15 Declaration: Type Declaration_liste_vars SEMICOLON .

    $default  reduce using rule 15 (Declaration)


State 48

   16 Declaration_liste_vars: VAR . Assignation SEPARATEUR Declaration_liste_vars
   17                       | VAR . Assignation

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 19 (Assignation)

    Assignation  go to state 46


State 49

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE . SEMICOLON

    SEMICOLON  shift, and go to state 68


State 50

   27 Liste_params: Liste_params SEPARATEUR . Params

    NOMBRE  shift, and go to state 29
    TEXT    shift, and go to state 30
    VAR     shift, and go to state 31

    Params  go to state 69


State 51

   49 Expr: SUB Expr .
   50     | Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 49 (Expr)


State 52

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr
   60     | PARENTHESE_OUVRANTE Expr . PARENTHESE_FERMANTE

    PLUS                 shift, and go to state 53
    SUB                  shift, and go to state 54
    MULT                 shift, and go to state 55
    DIV                  shift, and go to state 56
    POW                  shift, and go to state 57
    PARENTHESE_FERMANTE  shift, and go to state 70
    EQUALS               shift, and go to state 58
    LESS_EQUALS          shift, and go to state 59
    GREATER_EQUALS       shift, and go to state 60
    GREATER              shift, and go to state 61
    LESS                 shift, and go to state 62


State 53

   50 Expr: Expr PLUS . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 71


State 54

   51 Expr: Expr SUB . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 72


State 55

   52 Expr: Expr MULT . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 73


State 56

   53 Expr: Expr DIV . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 74


State 57

   54 Expr: Expr POW . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 75


State 58

   59 Expr: Expr EQUALS . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 76


State 59

   56 Expr: Expr LESS_EQUALS . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 77


State 60

   55 Expr: Expr GREATER_EQUALS . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 78


State 61

   58 Expr: Expr GREATER . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 79


State 62

   57 Expr: Expr LESS . Expr

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 39

    Expr  go to state 80


State 63

   37 BlocIfTernaire: Expr QUESTION_MARK . Operation COLON Operation

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 81

    AppelFonction  go to state 82
    Operation      go to state 83
    Expr           go to state 84


State 64

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr . $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE
   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    PLUS            shift, and go to state 53
    SUB             shift, and go to state 54
    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 42 ($@8)

    $@8  go to state 85


State 65

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

    PARENTHESE_FERMANTE  shift, and go to state 86


State 66

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE
   27 Liste_params: Liste_params . SEPARATEUR Params

    PARENTHESE_FERMANTE  shift, and go to state 87
    SEPARATEUR           shift, and go to state 50


State 67

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR . Declaration_liste_vars

    VAR  shift, and go to state 48

    Declaration_liste_vars  go to state 88


State 68

   24 AppelFonction: VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON .

    $default  reduce using rule 24 (AppelFonction)


State 69

   27 Liste_params: Liste_params SEPARATEUR Params .

    $default  reduce using rule 27 (Liste_params)


State 70

   60 Expr: PARENTHESE_OUVRANTE Expr PARENTHESE_FERMANTE .

    $default  reduce using rule 60 (Expr)


State 71

   50 Expr: Expr . PLUS Expr
   50     | Expr PLUS Expr .
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 50 (Expr)


State 72

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   51     | Expr SUB Expr .
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 51 (Expr)


State 73

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   52     | Expr MULT Expr .
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 52 (Expr)


State 74

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   53     | Expr DIV Expr .
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 53 (Expr)


State 75

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   54     | Expr POW Expr .
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 54 (Expr)


State 76

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr
   59     | Expr EQUALS Expr .

    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 59 (Expr)


State 77

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   56     | Expr LESS_EQUALS Expr .
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 56 (Expr)


State 78

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   55     | Expr GREATER_EQUALS Expr .
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 55 (Expr)


State 79

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   58     | Expr GREATER Expr .
   59     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 58 (Expr)


State 80

   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   57     | Expr LESS Expr .
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 57 (Expr)


State 81

   24 AppelFonction: VAR . PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE SEMICOLON
   48 Expr: VAR .

    PARENTHESE_OUVRANTE  shift, and go to state 20

    $default  reduce using rule 48 (Expr)


State 82

   32 Operation: AppelFonction .

    $default  reduce using rule 32 (Operation)


State 83

   37 BlocIfTernaire: Expr QUESTION_MARK Operation . COLON Operation

    COLON  shift, and go to state 89


State 84

   31 Operation: Expr .
   50 Expr: Expr . PLUS Expr
   51     | Expr . SUB Expr
   52     | Expr . MULT Expr
   53     | Expr . DIV Expr
   54     | Expr . POW Expr
   55     | Expr . GREATER_EQUALS Expr
   56     | Expr . LESS_EQUALS Expr
   57     | Expr . LESS Expr
   58     | Expr . GREATER Expr
   59     | Expr . EQUALS Expr

    PLUS            shift, and go to state 53
    SUB             shift, and go to state 54
    MULT            shift, and go to state 55
    DIV             shift, and go to state 56
    POW             shift, and go to state 57
    EQUALS          shift, and go to state 58
    LESS_EQUALS     shift, and go to state 59
    GREATER_EQUALS  shift, and go to state 60
    GREATER         shift, and go to state 61
    LESS            shift, and go to state 62

    $default  reduce using rule 31 (Operation)


State 85

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 . PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

    PARENTHESE_FERMANTE  shift, and go to state 90


State 86

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

    ACCOLADE_OUVRANTE  shift, and go to state 91


State 87

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 92


State 88

   16 Declaration_liste_vars: VAR Assignation SEPARATEUR Declaration_liste_vars .

    $default  reduce using rule 16 (Declaration_liste_vars)


State 89

   37 BlocIfTernaire: Expr QUESTION_MARK Operation COLON . Operation

    NOMBRE               shift, and go to state 34
    FLOTTANT             shift, and go to state 35
    TEXT                 shift, and go to state 36
    SUB                  shift, and go to state 37
    PARENTHESE_OUVRANTE  shift, and go to state 38
    VAR                  shift, and go to state 81

    AppelFonction  go to state 82
    Operation      go to state 93
    Expr           go to state 84


State 90

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE . ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 94


State 91

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . $@4 Input ACCOLADE_FERMANTE $@5 BlocElse

    $default  reduce using rule 34 ($@4)

    $@4  go to state 95


State 92

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . $@2 Input ACCOLADE_FERMANTE

    $default  reduce using rule 22 ($@2)

    $@2  go to state 96


State 93

   37 BlocIfTernaire: Expr QUESTION_MARK Operation COLON Operation .

    $default  reduce using rule 37 (BlocIfTernaire)


State 94

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE . $@9 Input ACCOLADE_FERMANTE

    $default  reduce using rule 43 ($@9)

    $@9  go to state 97


State 95

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 . Input ACCOLADE_FERMANTE $@5 BlocElse

    $default  reduce using rule 1 (Input)

    Input  go to state 98


State 96

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 99


State 97

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 100


State 98

    2 Input: Input . Line
   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input . ACCOLADE_FERMANTE $@5 BlocElse

    ACCOLADE_FERMANTE  shift, and go to state 101
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 99

    2 Input: Input . Line
   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 102
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 100

    2 Input: Input . Line
   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 103
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 101

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE . $@5 BlocElse

    $default  reduce using rule 35 ($@5)

    $@5  go to state 104


State 102

   23 BlocFonction: Type VAR PARENTHESE_OUVRANTE Liste_params PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@2 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 23 (BlocFonction)


State 103

   44 BlocWhile: WHILE PARENTHESE_OUVRANTE $@7 Expr $@8 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@9 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 44 (BlocWhile)


State 104

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 . BlocElse

    ELSE  shift, and go to state 105

    $default  reduce using rule 38 (BlocElse)

    BlocElse  go to state 106


State 105

   40 BlocElse: ELSE . ACCOLADE_OUVRANTE $@6 Input ACCOLADE_FERMANTE

    ACCOLADE_OUVRANTE  shift, and go to state 107


State 106

   36 BlocIf: IF PARENTHESE_OUVRANTE Expr $@3 PARENTHESE_FERMANTE ACCOLADE_OUVRANTE $@4 Input ACCOLADE_FERMANTE $@5 BlocElse .

    $default  reduce using rule 36 (BlocIf)


State 107

   40 BlocElse: ELSE ACCOLADE_OUVRANTE . $@6 Input ACCOLADE_FERMANTE

    $default  reduce using rule 39 ($@6)

    $@6  go to state 108


State 108

   40 BlocElse: ELSE ACCOLADE_OUVRANTE $@6 . Input ACCOLADE_FERMANTE

    $default  reduce using rule 1 (Input)

    Input  go to state 109


State 109

    2 Input: Input . Line
   40 BlocElse: ELSE ACCOLADE_OUVRANTE $@6 Input . ACCOLADE_FERMANTE

    ACCOLADE_FERMANTE  shift, and go to state 110
    SEMICOLON          shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 7
    VAR                shift, and go to state 8
    WHILE              shift, and go to state 9
    IF                 shift, and go to state 10

    Line           go to state 11
    Type           go to state 12
    Declaration    go to state 13
    Affectation    go to state 14
    BlocFonction   go to state 15
    AppelFonction  go to state 16
    BlocIf         go to state 17
    BlocWhile      go to state 18


State 110

   40 BlocElse: ELSE ACCOLADE_OUVRANTE $@6 Input ACCOLADE_FERMANTE .

    $default  reduce using rule 40 (BlocElse)
